#include<iostream>
#include"Rect.h"

#include"Circle.h"

int main(void)
{
	Shape* shape1 = new Rect(3, 6);
	Shape* shape2 = new Circle(5);

	
	shape1->calcArea(); //如果calcArea()不声明为虚函数，则会调用父类的calArea()函数
	shape2->calcArea();

	
	delete shape1; // 若想通过delete父类指针来释放子类申请的内存则必须使用虚析构函数
	shape1 = NULL;
	delete shape2;
	shape2 = NULL;
	system("pause");
	return 0;
}

//动态多态（晚绑定）：必须建立在封装和继承的基础上，两个类不同对象收到相同消息（函数）。
//静态多态（早绑定）：在一个类中的互为重载的函数被对象调用，两个函数即相同对象收到不同消息（函数）

/*
================================================================================
==>在多态中（虚函数）
--------------------------------------------------------------------------------
	构造函数不能为虚函数；如为虚函数，子类无法对父类进行初始化。
	如果使用多态，析构函数必须为虚函数（子类析构自动调用父类析构），否则会造成内存泄露（子类无法析构）。

================================================================================
*/